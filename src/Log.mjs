// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_array from "rescript/lib/es6/caml_array.js";

var delimiter = " :: ";

function logColor(name) {
  if (name === "dim") {
    return "\x1b[2m";
  } else if (name === "red") {
    return "\x1b[31m";
  } else if (name === "green") {
    return "\x1b[32m";
  } else {
    return "\x1b[0m";
  }
}

function log(val) {
  return {
          concat: (function (other) {
              return log(val + other.val);
            }),
          replace: (function (old, $$new) {
              return log(val.replace("%" + old, $$new));
            }),
          time: (function () {
              return log(val).replace("time", new Date().toISOString());
            }),
          log: (function (param) {
              var stdout = log(val).time().val;
              console.log(stdout);
              return log(stdout);
            }),
          val: val
        };
}

function parseDefault(string) {
  var segments = string.split(delimiter);
  return /* Default */{
          org: Caml_array.get(segments, 0),
          time: Caml_array.get(segments, 1),
          ctx: Caml_array.get(segments, 2),
          msg: Caml_array.get(segments, 3)
        };
}

var logDefault = log([
        "PRP",
        logColor("dim") + "%time",
        logColor("reset") + "prp-node %cmd",
        "%color%msg" + logColor("reset")
      ].join(delimiter));

export {
  delimiter ,
  logColor ,
  log ,
  parseDefault ,
  logDefault ,
  
}
/* logDefault Not a pure module */
